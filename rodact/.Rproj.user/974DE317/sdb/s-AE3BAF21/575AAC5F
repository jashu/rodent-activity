{
    "contents" : "#'  fixData\n#'  \n#'  Performs standard fixes for raw XYZ time-series data exported from Activity Monitor. \n#'  \n#'  @param subject subject ID corresponding to file with activity time series.\n#'  @param session session number corresponding to folder where file is located.\n#'  @param file_path optional specification of file path where session folders are located.\n#'  Defaults to current working directory.\n#'  @param file_ext optional specification of file extension if something other than \"txt\".\n#'  @return overwrites exisiting files with new information. See details.\n#'  @author Jason Shumake\n#'  @details\n#'  This function performs several standard fixes to files exported by Activity Monitor\n#'  that are in the tabular form of Time followed by spatial coordrinates X, Y, and Z:\n#'  \n#'  1)  Converts the time units (corresponding to a sampling period of 50 ms) into seconds.\n#'  \n#'  2)  Interpolates X,Y coordinates for sampling periods in which the rat goes off the grid\n#'      of infrared beams, which can occur when the rat stands upright in one corner. Med Associates\n#'      software scores these events as \"jumps\", but it is extremely rare that these off-grid\n#'      moments are due to the rat actually jumping. Interpolating from the last known X,Y position\n#'      is a very reasonable assumption for filling in missing X,Y coordinates.\n#'      \n#'  3)  Med Associates records as a Z coordinate the number assigned to the particular beam that is\n#'      broken. However, these numbers do not reflect differences in vertical position. All\n#'      of these beams are at the same height, and any number greater than zero reflects a boolean\n#'      event: the rat has reared up on its hind legs. Therefore, all numbers greater than 0 are\n#'      changed to 1.\n#'      \n#'  PREREQUISITES:\n#'  This function works with the file names and directory structure created by using the\n#'  LD_Translator, which is a Python package that takes .Export files containing multiple subjects\n#'  and creates single files for each subject and assigns them to folders corresponding to each\n#'  session run.\n#'  \n#'  1)  Run the LD_Translator according to its instructions.\n#'  \n#'  2)  Set your R working directory to the folder which contains the \"Session\" folders (Session1, \n#'      Session2. etc.), or pass the location of this directory to the function parameter \"file_path\".    \n#'  \n#'  @export\n\n\nfixData = function(subject, session, file_path = getwd(), file_ext = \"txt\")\n{\n  file = paste(file_path, \"/Session\", session, \"/\", subject, \".\", file_ext ,sep=\"\")\n  data = read.table(file,header=T)\n  if (typeof(data$Time) == \"double\") stop(\"File already processed.\")\n  #Change time units to seconds:\n  data$Time=as.numeric(data$Time)*.05\n  #Correct time points where rat is off-grid:\n  for (i in 2:nrow(data))\n  {\n    if (data$X[i]==0)\n      data$X[i]=data$X[i-1]\n    if (data$Y[i]==0)\n      data$Y[i]=data$Y[i-1]\n  }\n  #Set Z coordinates to the same value if any upper-level beam is broken:\n  data$Z[data$Z>0]=1\n  #Rewrite files with correct data:\n  write.table(data,file=file,sep=\"\\t\",row.names=FALSE)\n}",
    "created" : 1407097103432.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2686491182",
    "id" : "575AAC5F",
    "lastKnownWriteTime" : 1406762597,
    "path" : "~/Dropbox/R/Packages/rodact/R/fixData.R",
    "project_path" : "R/fixData.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}